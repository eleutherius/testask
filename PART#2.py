#По теории читаем и знакомимся по книге с класами объектами и основами ООП.
"""
Задача1: создать базовый клас который описывает геометрическую фигуру (можно абстрактный).
Так же нужно создать класы которые описывают элипс, круг, треугольник, равнобедренный треугольник,
равносторонний треугольник, прямоугольник, квадрат. Все классы должны иметь методы вычисления площади и
периметра.
"""
"""
Задача2:  со звездочкой: 
Создать структуру данных типа дерево. Каждый узел дерева должен иметь строковое представление в виде "путь к вершине". Имплементировать методы который позволяют обходить дерево горизонтально и вертикально. 
"""
"""
Задача3: Логирование. Необходимо реализовать логирование при помощи классов. 
Класс логирования должен обеспечивать возможность как записи в текстовьій файл,
так и вьівод на консоль и оба. В зависимости от переданного параметра.
Простор для творчества ваш. 
Форматирование не обязательно, достаточно вьіводить время, помимо сообщения.
Внимание, использовать стандартную библиотеку нельзя.Со звездочкой ;)
P.S. Копировать решение из стандартной библиотеке - не красиво в плане обучения. Либо решайте сами, либо пропускайте задачу.
"""
import datetime

class log:
    def __init__(self, msg=None, path='./logs.txt', LEVEL="INFO"):
        self.msg = msg
        self.path = path
        self.LEVEL = LEVEL

    def formatting(self, time, err=False):
        Red = '\033[91m'
        Green = '\033[92m'
        BOLD = '\033[1m'
        ITALIC = '\033[3m'
        UNDERLINE = '\033[4m'
        END = '\033[0m'

        if err:
            print (f"{Red}{time}{self.msg}{END}")
        else:
            print (f"{Green}{time}{self.msg}{END}")

    def writing(self, time):
        with open (self.path, "a") as f:
            # time = datetime.datetime.now().strftime("%Y-%m-%d-%H.%M.%S")
            f.write(f"{time}{self.msg}")

    def logining(self, msg=None):
        if self.LEVEL == "DEBUG":
            time = datetime.datetime.now ( ).strftime ("%Y-%m-%d-%H.%M.%S")
            self.writing(time)
            self.formatting(time)
log (LEVEL="DEBUG")
log.logining("sdgsdg")




